{"ast":null,"code":"var _jsxFileName = \"/Users/mbeng/Documents/Complete Web Developer/React/robofriends/robofriends/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\nimport { setSearchField, requestRobots } from '../action';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    isPending: state.requestRobots.isPending,\n    robots: state.requestRobots.robots,\n    error: state.requestRobots.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  };\n};\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    const {\n      searchField,\n      onSearchChange,\n      robots,\n      isPending\n    } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return isPending ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Loading\") : React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"f1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Robofriends\"), React.createElement(SearchBox, {\n      searchChange: onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Scroll, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(ErrorBoundary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(CardList, {\n      robots: filteredRobots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/mbeng/Documents/Complete Web Developer/React/robofriends/robofriends/src/containers/App.js"],"names":["React","Component","connect","CardList","SearchBox","Scroll","ErrorBoundary","setSearchField","requestRobots","mapStateToProps","state","searchField","searchRobots","isPending","robots","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","componentDidMount","props","render","filteredRobots","filter","robot","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAO,WAAP;AACA,SAASC,cAAT,EAAwBC,aAAxB,QAA6C,WAA7C;;AAGA,MAAMC,eAAe,GAAGC,KAAK,IAAG;AAC5B,SAAO;AACHC,IAAAA,WAAW,EAACD,KAAK,CAACE,YAAN,CAAmBD,WAD5B;AAEHE,IAAAA,SAAS,EAACH,KAAK,CAACF,aAAN,CAAoBK,SAF3B;AAGHC,IAAAA,MAAM,EAACJ,KAAK,CAACF,aAAN,CAAoBM,MAHxB;AAIHC,IAAAA,KAAK,EAACL,KAAK,CAACF,aAAN,CAAoBO;AAJvB,GAAP;AAMH,CAPD;;AASA,MAAMC,kBAAkB,GAAGC,QAAD,IAAY;AACtC,SAAO;AACHC,IAAAA,cAAc,EAAGC,KAAD,IAAUF,QAAQ,CAACV,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAD/B;AAEHC,IAAAA,eAAe,EAAC,MAAKL,QAAQ,CAACT,aAAa,EAAd;AAF1B,GAAP;AAIC,CALD;;AAOA,MAAMe,GAAN,SAAkBtB,SAAlB,CAA4B;AAExBuB,EAAAA,iBAAiB,GAAE;AACpB,SAAKC,KAAL,CAAWH,eAAX;AACF;;AAIGI,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACf,MAAAA,WAAD;AAAaO,MAAAA,cAAb;AAA6BJ,MAAAA,MAA7B;AAAoCD,MAAAA;AAApC,QAAkD,KAAKY,KAA7D;AACA,UAAME,cAAc,GAAGb,MAAM,CAACc,MAAP,CAAcC,KAAK,IAAG;AACjD,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCrB,WAAW,CAACoB,WAAZ,EAAlC,CAAP;AACC,KAF0B,CAAvB;AAIA,WAAOlB,SAAS,GAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADgB,GAGZ;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAEA,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAEK,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAIS,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADJ,CAHA,CAHJ;AAaH;;AA3BuB;;AA8B5B,eAAezB,OAAO,CAACO,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf","sourcesContent":["import React,{Component} from 'react'\nimport { connect } from 'react-redux'\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\nimport Scroll from '../components/Scroll'\nimport ErrorBoundary from '../components/ErrorBoundary'\nimport './App.css'\nimport { setSearchField,requestRobots } from '../action'\n\n\nconst mapStateToProps = state =>{\n    return {\n        searchField:state.searchRobots.searchField,\n        isPending:state.requestRobots.isPending,\n        robots:state.requestRobots.robots,\n        error:state.requestRobots.error\n    }\n}\n\nconst mapDispatchToProps =(dispatch)=>{\nreturn {\n    onSearchChange: (event)=> dispatch(setSearchField(event.target.value)),\n    onRequestRobots:()=> dispatch(requestRobots())\n}\n}\n\nclass App extends Component { \n\n    componentDidMount(){\n   this.props.onRequestRobots(); \n}\n\n   \n\n    render(){ \n        const {searchField,onSearchChange, robots,isPending } = this.props;\n        const filteredRobots = robots.filter(robot =>{\n    return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n   \n        return isPending ?\n        <h1>Loading</h1> :\n        ( \n            <div className='tc'>\n            <h1 className='f1'>Robofriends</h1>\n            <SearchBox searchChange={onSearchChange} />\n            <Scroll> \n                <ErrorBoundary>\n                 <CardList robots = {filteredRobots}/>\n                </ErrorBoundary> \n            </Scroll>  \n            </div>\n        )\n    } \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}