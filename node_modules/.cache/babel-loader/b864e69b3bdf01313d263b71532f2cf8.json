{"ast":null,"code":"var _jsxFileName = \"/Users/mbeng/Documents/Complete Web Developer/React/robofriends/robofriends/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\nimport { setSearchField } from '../action';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value))\n  };\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchField: event.target.value\n      }); //To change a value in the state object, use the this.setState() method\n    };\n\n    this.state = {\n      robots: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => {\n      this.setState({\n        robots: users\n      });\n    });\n  } // methed create to catct the event when something is typed into the search box\n\n\n  render() {\n    const {\n      robots,\n      searchField\n    } = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return !robots.length ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Loading\") : React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"f1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Robofriends\"), React.createElement(SearchBox, {\n      searchChange: this.onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Scroll, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(ErrorBoundary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(CardList, {\n      robots: filteredRobots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/mbeng/Documents/Complete Web Developer/React/robofriends/robofriends/src/containers/App.js"],"names":["React","Component","connect","CardList","SearchBox","Scroll","ErrorBoundary","setSearchField","mapStateToProps","state","searchField","searchRobots","mapDispatchToProps","dispatch","onSearchChange","event","target","value","App","constructor","setState","robots","componentDidMount","fetch","then","response","json","users","render","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAO,WAAP;AAEA,SAASC,cAAT,QAA+B,WAA/B;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAG;AAC5B,SAAO;AACHC,IAAAA,WAAW,EAACD,KAAK,CAACE,YAAN,CAAmBD;AAD5B,GAAP;AAGH,CAJD;;AAMA,MAAME,kBAAkB,GAAGC,QAAD,IAAY;AACtC,SAAO;AACHC,IAAAA,cAAc,EAAGC,KAAD,IAAUF,QAAQ,CAACN,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AAD/B,GAAP;AAGC,CAJD;;AAMA,MAAMC,GAAN,SAAkBjB,SAAlB,CAA4B;AAExBkB,EAAAA,WAAW,GAAG;AACV;;AADU,SAelBL,cAfkB,GAeFC,KAAD,IAAU;AACrB,WAAKK,QAAL,CAAc;AAACV,QAAAA,WAAW,EAAEK,KAAK,CAACC,MAAN,CAAaC;AAA3B,OAAd,EADqB,CAC4B;AAChD,KAjBa;;AAEV,SAAKR,KAAL,GAAa;AACTY,MAAAA,MAAM,EAAC,EADE;AAETX,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH;;AAEDY,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADjB,EAECF,IAFD,CAEMG,KAAK,IAAG;AAAC,WAAKP,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAEM;AAAT,OAAd;AAA+B,KAF9C;AAGP,GAd2B,CAgB5B;;;AAMIC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEP,MAAAA,MAAF;AAAUX,MAAAA;AAAV,QAA0B,KAAKD,KAArC;AACA,UAAMoB,cAAc,GAAGR,MAAM,CAACS,MAAP,CAAcC,KAAK,IAAG;AACjD,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCxB,WAAW,CAACuB,WAAZ,EAAlC,CAAP;AACC,KAF0B,CAAvB;AAIA,WAAO,CAACZ,MAAM,CAACc,MAAR,GACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADO,GAGH;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAEA,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKrB,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAIe,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADJ,CAHA,CAHJ;AAaH;;AAzCuB;;AA4C5B,eAAe3B,OAAO,CAACM,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CM,GAA7C,CAAf","sourcesContent":["import React,{Component} from 'react'\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\nimport Scroll from '../components/Scroll'\nimport ErrorBoundary from '../components/ErrorBoundary'\nimport './App.css'\n\nimport { setSearchField } from '../action';\n\nconst mapStateToProps = state =>{\n    return {\n        searchField:state.searchRobots.searchField\n    }\n}\n\nconst mapDispatchToProps =(dispatch)=>{\nreturn {\n    onSearchChange: (event)=> dispatch(setSearchField(event.target.value))\n}\n}\n\nclass App extends Component { \n\n    constructor() {\n        super();\n        this.state = {\n            robots:[],\n            searchField: ''\n        } \n    } \n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response=> response.json())\n        .then(users =>{this.setState({robots: users})});  \n}\n\n// methed create to catct the event when something is typed into the search box\nonSearchChange=(event) =>{\n    this.setState({searchField: event.target.value}) //To change a value in the state object, use the this.setState() method\n    } \n   \n\n    render(){ \n        const { robots, searchField } = this.state;\n        const filteredRobots = robots.filter(robot =>{\n    return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n   \n        return !robots.length ?\n        <h1>Loading</h1> :\n        ( \n            <div className='tc'>\n            <h1 className='f1'>Robofriends</h1>\n            <SearchBox searchChange={this.onSearchChange} />\n            <Scroll> \n                <ErrorBoundary>\n                 <CardList robots = {filteredRobots}/>\n                </ErrorBoundary> \n            </Scroll>  \n            </div>\n        )\n    } \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}