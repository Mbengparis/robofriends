{"ast":null,"code":"import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from \"./constants\";\nexport const setSearchField = text => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text\n}); //wrapped in () because we dont want to return anything\n\nexport const requestRobots = () => dispatch => {\n  dispatch({\n    type: REQUEST_ROBOTS_PENDING\n  });\n  fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(data => dispatch({\n    type: REQUEST_ROBOTS_SUCCESS,\n    payload: data\n  })).then(error => dispatch({\n    type: REQUEST_ROBOTS_FAILED,\n    payload: error\n  }));\n};","map":{"version":3,"sources":["/Users/mbeng/Documents/Complete Web Developer/React/robofriends/robofriends/src/action.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","setSearchField","text","type","payload","requestRobots","dispatch","fetch","then","response","json","data","error"],"mappings":"AAAA,SAASA,mBAAT,EACSC,sBADT,EAESC,sBAFT,EAGSC,qBAHT,QAGsC,aAHtC;AAOA,OAAO,MAAMC,cAAc,GAAIC,IAAD,KAAW;AACzCC,EAAAA,IAAI,EAAEN,mBADmC;AAEzCO,EAAAA,OAAO,EAAEF;AAFgC,CAAX,CAAvB,C,CAGJ;;AAGH,OAAO,MAAMG,aAAa,GAAE,MAAOC,QAAD,IAAc;AAC5CA,EAAAA,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACAS,EAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADrB,EAEKF,IAFL,CAEUG,IAAI,IAAEL,QAAQ,CAAC;AAACH,IAAAA,IAAI,EAACJ,sBAAN;AAA8BK,IAAAA,OAAO,EAACO;AAAtC,GAAD,CAFxB,EAGKH,IAHL,CAGUI,KAAK,IAAEN,QAAQ,CAAC;AAACH,IAAAA,IAAI,EAAEH,qBAAP;AAA8BI,IAAAA,OAAO,EAACQ;AAAtC,GAAD,CAHzB;AAIH,CANM","sourcesContent":["import { CHANGE_SEARCH_FIELD,\n         REQUEST_ROBOTS_PENDING, \n         REQUEST_ROBOTS_SUCCESS,\n         REQUEST_ROBOTS_FAILED } from \"./constants\"\n\n\n\nexport const setSearchField = (text) => ({\ntype: CHANGE_SEARCH_FIELD,\npayload: text \n}) //wrapped in () because we dont want to return anything\n\n\nexport const requestRobots =() => (dispatch) => {\n    dispatch({ type: REQUEST_ROBOTS_PENDING});\n    fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response=> response.json())\n        .then(data=>dispatch({type:REQUEST_ROBOTS_SUCCESS, payload:data}))\n        .then(error=>dispatch({type: REQUEST_ROBOTS_FAILED, payload:error}))\n}"]},"metadata":{},"sourceType":"module"}